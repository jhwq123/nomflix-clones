{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.tsx"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","d","path","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","value","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","nowMovies","fetch","then","response","json","latestMovies","topRatedMovies","upcomingMovies","onAirTvShows","latestTvshows","topTvshows","popTvshows","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","SlideTitle","h3","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","BigOverview","BigVote","BtnPrev","BtnNext","rowVariants","hidden","nowBack","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duration","infoVariants","opacity","Home","useQuery","nowData","nowLoading","isLoading","nowIndex","setNowIndex","nowLeaving","setNowLeaving","setNowBack","toggleNowLeaving","prev","topData","topLoading","topIndex","setTopIndex","topLeaving","setTopLeaving","topBack","setTopBack","toggleTopLeaving","upData","upComing","upIndex","setUpIndex","upLeaving","setUpLeaving","upBack","setUpBack","toggleUpLeaving","latestData","latestComing","onBoxClicked","movieId","bigMovieMatch","clickedNowMovie","params","results","find","movie","clickedTopMovie","clickedUpMovie","poster_path","title","overview","release_date","totalMovies","length","maxIndex","Math","floor","AnimatePresence","onExitComplete","custom","slice","map","backdrop_path","style","backgroundImage","vote_average","vote_count","location","useLocation","String","URLSearchParams","search","searchMovies","movieData","movieLoading","movieIndex","setMovieIndex","movieLeaving","setMovieLeaving","movieBack","setMovieBack","toggleMovieLeaving","searchTvShows","tvData","tvLoading","tvIndex","setTvIndex","tvLeaving","setTvLeaving","tvBack","setTvBack","toggleTvLeaving","totalTvs","tv","name","BigTv","Tv","onData","onLoading","onIndex","setOnIndex","onLeaving","setOnLeaving","onBack","setOnBack","toggleOnLeaving","popData","popLoading","popIndex","setPopIndex","popLeaving","setPopLeaving","popBack","setPopBack","togglePopLeaving","latestLoading","tvId","bigTvMatch","clickedOnTv","clickedTopTv","clickedPopTv","last_air_date","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.e2348672.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  height: 80px;\r\n  font-size: 12px;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  aligh-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: ${(props) => props.theme.red};\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Search = styled.form`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Circle = styled(motion.span)`\r\n  position: absolute;\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 5px;\r\n  bottom: -15px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  background-color: ${(props) => props.theme.red};\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  transform-origin: right center;\r\n  position: absolute;\r\n  left: -200px;\r\n  padding: 5px 10px;\r\n  padding-left: 25px;\r\n  z-index: -1;\r\n  color: white;\r\n  font-size: 16px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst logoVariants = {\r\n  normal: {\r\n    fillOpacity: 1,\r\n  },\r\n  active: {\r\n    fillOpacity: [0, 1, 0],\r\n    transition: {\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst navVariants = {\r\n  top: { backgroundColor: \"rgba(0, 0, 0, 0.3)\" },\r\n  scroll: { backgroundColor: \"rgba(0, 0, 0, 1)\" },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const homeMatch = useRouteMatch(\"/\");\r\n  const tvMatch = useRouteMatch(\"/tv\");\r\n  const inputAnimation = useAnimation();\r\n  const navAnimation = useAnimation();\r\n  const { scrollY } = useViewportScroll();\r\n  const toggleSearch = () => {\r\n    if (searchOpen) {\r\n      inputAnimation.start({ scaleX: 0 });\r\n    } else {\r\n      inputAnimation.start({ scaleX: 1 });\r\n    }\r\n    setSearchOpen((value) => !value);\r\n  };\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 80) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  }, [scrollY, navAnimation]);\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n  const onValid = (data: IForm) => {\r\n    history.push(`/search?keyword=${data.keyword}`);\r\n  };\r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Logo\r\n          variants={logoVariants}\r\n          whileHover=\"active\"\r\n          initial=\"normal\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1024\"\r\n          height=\"276.742\"\r\n          viewBox=\"0 0 1024 276.742\"\r\n        >\r\n          <path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\r\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\r\n        </Logo>\r\n        <Items>\r\n          <Item>\r\n            <Link to=\"/\">\r\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/tv\">\r\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n          <motion.svg\r\n            onClick={toggleSearch}\r\n            animate={{ x: searchOpen ? -200 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            initial={{ scaleX: 0 }}\r\n            animate={inputAnimation}\r\n            transition={{ type: \"linear\" }}\r\n            placeholder=\"Search for movie & tv show.\"\r\n          />\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const API_KEY = \"92eb6193b10b5f0adebb4d4c82e9d3ec\";\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\n\r\ninterface NowMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n}\r\n\r\ninterface TopMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\ninterface UpMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n}\r\n\r\ninterface OnAirTv {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  name: string;\r\n  overview: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\ninterface LatestTv {\r\n  name: string;\r\n  overview: string;\r\n  season_number: number;\r\n  air_date: string;\r\n}\r\n\r\ninterface TopTv {\r\n  id: number;\r\n  overview: string;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  name: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\ninterface PopTv {\r\n  id: number;\r\n  overview: string;\r\n  backdrop_path: string;\r\n  name: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\ninterface SearchMovie {\r\n  id: number;\r\n  overview: string;\r\n  backdrop_path: string;\r\n  title: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\ninterface SearchTv {\r\n  id: number;\r\n  overview: string;\r\n  backdrop_path: string;\r\n  name: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\nexport interface IGetNowMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: NowMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetLatestMoviesResult {\r\n  id: number;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  release_date: string;\r\n  runtime: number;\r\n}\r\n\r\nexport interface IGetTopRatedMoviesResult {\r\n  page: number;\r\n  results: TopMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetUpcomingMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: UpMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetOnAirTvResult {\r\n  page: number;\r\n  results: OnAirTv[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetLatestTvResult {\r\n  id: number;\r\n  poster_path: string;\r\n  name: string;\r\n  overview: string;\r\n  last_air_date: string;\r\n  seasons: LatestTv[];\r\n}\r\n\r\nexport interface IGetTopRatedTvResult {\r\n  page: number;\r\n  results: TopTv[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetPopRatedTvResult {\r\n  page: number;\r\n  results: PopTv[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetSearchMovieResult {\r\n  page: number;\r\n  results: SearchMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetSearchTvResult {\r\n  page: number;\r\n  results: SearchTv[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport function nowMovies() {\r\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function latestMovies() {\r\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function topRatedMovies() {\r\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function upcomingMovies() {\r\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function onAirTvShows() {\r\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function latestTvshows() {\r\n  return fetch(`${BASE_PATH}/tv/latest?api_key=${API_KEY}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function topTvshows() {\r\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function popTvshows() {\r\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function searchMovies(keyword: String) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${keyword}`\r\n  ).then((response) => response.json());\r\n}\r\n\r\nexport function searchTvShows(keyword: string) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${keyword}`\r\n  ).then((response) => response.json());\r\n}\r\n","export function makeImagePath(id: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  nowMovies,\r\n  topRatedMovies,\r\n  upcomingMovies,\r\n  IGetNowMoviesResult,\r\n  IGetTopRatedMoviesResult,\r\n  IGetUpcomingMoviesResult,\r\n  IGetLatestMoviesResult,\r\n  latestMovies,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 200vh;\r\n  background-color: black;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  aligh-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  background-color: red;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 36px;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 32px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  background-color: white;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-itmes: center;\r\n  margin-bottom: 230px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 90%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center ccenter;\r\n  height: 200px;\r\n  font-size: 23px;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 15px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigVote = styled.div`\r\n  width: 400px;\r\n  height: 70px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  top: -100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst BtnPrev = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  left: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BtnNext = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  right: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: (nowBack: boolean) => ({\r\n    x: nowBack ? -window.outerWidth - 10 : window.outerWidth + 10,\r\n  }),\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (nowBack: boolean) => ({\r\n    x: nowBack ? window.outerWidth + 10 : -window.outerWidth - 10,\r\n  }),\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -50,\r\n    transition: {\r\n      delay: 0.2,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 6;\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const { scrollY } = useViewportScroll();\r\n\r\n  // Now playing Movies\r\n  const { data: nowData, isLoading: nowLoading } =\r\n    useQuery<IGetNowMoviesResult>([\"movies\", \"nowPlaying\"], nowMovies);\r\n  const [nowIndex, setNowIndex] = useState(0);\r\n  const [nowLeaving, setNowLeaving] = useState(false);\r\n  const [nowBack, setNowBack] = useState(false);\r\n  const increaseNowIndex = () => {\r\n    if (nowData) {\r\n      if (nowLeaving) return;\r\n      toggleNowLeaving();\r\n      const totalMovies = nowData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setNowIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setNowBack(false);\r\n    }\r\n  };\r\n  const decreaseNowIndex = () => {\r\n    if (nowData) {\r\n      if (nowLeaving) return;\r\n      toggleNowLeaving();\r\n      const totalMovies = nowData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setNowIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setNowBack(true);\r\n    }\r\n  };\r\n  const toggleNowLeaving = () => setNowLeaving((prev) => !prev);\r\n\r\n  // top rated movies\r\n  const { data: topData, isLoading: topLoading } =\r\n    useQuery<IGetTopRatedMoviesResult>([\"movies\", \"top\"], topRatedMovies);\r\n  const [topIndex, setTopIndex] = useState(0);\r\n  const [topLeaving, setTopLeaving] = useState(false);\r\n  const [topBack, setTopBack] = useState(false);\r\n  const increaseTopIndex = () => {\r\n    if (topData) {\r\n      if (topLeaving) return;\r\n      toggleTopLeaving();\r\n      const totalMovies = topData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setTopBack(false);\r\n    }\r\n  };\r\n  const decreaseTopIndex = () => {\r\n    if (topData) {\r\n      if (topLeaving) return;\r\n      toggleTopLeaving();\r\n      const totalMovies = topData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setTopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setTopBack(true);\r\n    }\r\n  };\r\n  const toggleTopLeaving = () => setTopLeaving((prev) => !prev);\r\n\r\n  // Upcoming movies\r\n  const { data: upData, isLoading: upComing } =\r\n    useQuery<IGetUpcomingMoviesResult>([\"movies\", \"up\"], upcomingMovies);\r\n  const [upIndex, setUpIndex] = useState(0);\r\n  const [upLeaving, setUpLeaving] = useState(false);\r\n  const [upBack, setUpBack] = useState(false);\r\n  const toggleUpLeaving = () => setUpLeaving((prev) => !prev);\r\n  const increaseUpIndex = () => {\r\n    if (upData) {\r\n      if (upLeaving) return;\r\n      toggleUpLeaving();\r\n      const totalMovies = upData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setUpIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setUpBack(false);\r\n    }\r\n  };\r\n  const decreaseUpIndex = () => {\r\n    if (upData) {\r\n      if (upLeaving) return;\r\n      toggleUpLeaving();\r\n      const totalMovies = upData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setUpIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setUpBack(true);\r\n    }\r\n  };\r\n\r\n  // Latest Movies\r\n  const { data: latestData, isLoading: latestComing } =\r\n    useQuery<IGetLatestMoviesResult>([\"movies\", \"latest\"], latestMovies);\r\n\r\n  const onBoxClicked = (movieId: number) => {\r\n    history.push(`/movies/${movieId}`);\r\n  };\r\n  const onOverlayClick = () => history.push(\"/\");\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n  const clickedNowMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    nowData?.results.find(\r\n      (movie) => movie.id + \"\" === bigMovieMatch?.params.movieId\r\n    );\r\n  const clickedTopMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    topData?.results.find(\r\n      (movie) => movie.id + \"\" === bigMovieMatch?.params.movieId\r\n    );\r\n  const clickedUpMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    upData?.results.find(\r\n      (movie) => movie.id + \"\" === bigMovieMatch?.params.movieId\r\n    );\r\n  return (\r\n    <Wrapper>\r\n      {nowLoading && topLoading && upComing && latestComing ? (\r\n        <Loader>Loading</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner bgPhoto={makeImagePath(latestData?.poster_path || \"\")}>\r\n            <Title>{latestData?.title}</Title>\r\n            <Overview>{latestData?.overview}</Overview>\r\n            <BigVote>Movie Release : {latestData?.release_date}</BigVote>\r\n          </Banner>\r\n          <SlideTitle>Now Playing Movies</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseNowIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleNowLeaving}\r\n              custom={nowBack}\r\n            >\r\n              <Row\r\n                custom={nowBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={nowIndex}\r\n              >\r\n                {nowData?.results\r\n                  .slice(1)\r\n                  .slice(offset * nowIndex, offset * nowIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseNowIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <SlideTitle>Top Rated Movies</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseTopIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleTopLeaving}\r\n              custom={topBack}\r\n            >\r\n              <Row\r\n                custom={topBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={topIndex}\r\n              >\r\n                {topData?.results\r\n                  .slice(1)\r\n                  .slice(offset * topIndex, offset * topIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseTopIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <SlideTitle>Upcomming Movies</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseUpIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleUpLeaving}\r\n              custom={upBack}\r\n            >\r\n              <Row\r\n                custom={upBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={upIndex}\r\n              >\r\n                {upData?.results\r\n                  .slice(1)\r\n                  .slice(offset * upIndex, offset * upIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseUpIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{\r\n                    top: scrollY.get() + 100,\r\n                  }}\r\n                  layoutId={bigMovieMatch.params.movieId}\r\n                >\r\n                  {clickedNowMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedNowMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedNowMovie.title}</BigTitle>\r\n                      <BigOverview>{clickedNowMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                  {clickedTopMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedTopMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedTopMovie.title}</BigTitle>\r\n                      <BigVote>\r\n                        Average : {clickedTopMovie.vote_average} Score\r\n                      </BigVote>\r\n                      <BigVote>\r\n                        Count : {clickedTopMovie.vote_count} Votes\r\n                      </BigVote>\r\n                    </>\r\n                  )}\r\n                  {clickedUpMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedUpMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedUpMovie.title}</BigTitle>\r\n                      <BigOverview>{clickedUpMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  IGetSearchMovieResult,\r\n  IGetSearchTvResult,\r\n  searchMovies,\r\n  searchTvShows,\r\n} from \"../api\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 200vh;\r\n  background-color: black;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 100px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  aligh-items: center;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 32px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  background-color: white;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-itmes: center;\r\n  margin-bottom: 230px;\r\n`;\r\n\r\nconst BtnPrev = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  left: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BtnNext = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  right: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 90%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center ccenter;\r\n  height: 200px;\r\n  font-size: 23px;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: (nowBack: boolean) => ({\r\n    x: nowBack ? -window.outerWidth - 10 : window.outerWidth + 10,\r\n  }),\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (nowBack: boolean) => ({\r\n    x: nowBack ? window.outerWidth + 10 : -window.outerWidth - 10,\r\n  }),\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -50,\r\n    transition: {\r\n      delay: 0.2,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 6;\r\n\r\nfunction Search() {\r\n  const location = useLocation();\r\n  const keyword = String(new URLSearchParams(location.search).get(\"keyword\"));\r\n\r\n  // Movies\r\n  const { data: movieData, isLoading: movieLoading } =\r\n    useQuery<IGetSearchMovieResult>([\"movies\", keyword], () =>\r\n      searchMovies(keyword)\r\n    );\r\n  const [movieIndex, setMovieIndex] = useState(0);\r\n  const [movieLeaving, setMovieLeaving] = useState(false);\r\n  const [movieBack, setMovieBack] = useState(false);\r\n  const toggleMovieLeaving = () => setMovieLeaving((prev) => !prev);\r\n  const increaseMovieIndex = () => {\r\n    if (movieData) {\r\n      if (movieLeaving) return;\r\n      toggleMovieLeaving();\r\n      const totalMovies = movieData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setMovieIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setMovieBack(false);\r\n    }\r\n  };\r\n  const decreaseMovieIndex = () => {\r\n    if (movieData) {\r\n      if (movieLeaving) return;\r\n      toggleMovieLeaving();\r\n      const totalMovies = movieData.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setMovieIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setMovieBack(true);\r\n    }\r\n  };\r\n\r\n  // Tvs\r\n  const { data: tvData, isLoading: tvLoading } = useQuery<IGetSearchTvResult>(\r\n    [\"tvs\", keyword],\r\n    () => searchTvShows(keyword)\r\n  );\r\n  const [tvIndex, setTvIndex] = useState(0);\r\n  const [tvLeaving, setTvLeaving] = useState(false);\r\n  const [tvBack, setTvBack] = useState(false);\r\n  const toggleTvLeaving = () => setTvLeaving((prev) => !prev);\r\n  const increaseTvIndex = () => {\r\n    if (tvData) {\r\n      if (tvLeaving) return;\r\n      toggleTvLeaving();\r\n      const totalTvs = tvData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setTvIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setTvBack(false);\r\n    }\r\n  };\r\n  const decreaseTvIndex = () => {\r\n    if (tvData) {\r\n      if (tvLeaving) return;\r\n      toggleTvLeaving();\r\n      const totalTvs = tvData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setTvIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setTvBack(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {movieLoading && tvLoading ? (\r\n        <Loader>Loading</Loader>\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <SlideTitle>Movies</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseMovieIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleMovieLeaving}\r\n              custom={movieBack}\r\n            >\r\n              <Row\r\n                custom={movieBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={movieIndex}\r\n              >\r\n                {movieData?.results\r\n                  .slice(1)\r\n                  .slice(offset * movieIndex, offset * movieIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      variants={boxVariants}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseMovieIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <SlideTitle>Tvs</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseTvIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleTvLeaving}\r\n              custom={tvBack}\r\n            >\r\n              <Row\r\n                custom={tvBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={tvIndex}\r\n              >\r\n                {tvData?.results\r\n                  .slice(1)\r\n                  .slice(offset * tvIndex, offset * tvIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={tv.id + \"\"}\r\n                      key={tv.id}\r\n                      variants={boxVariants}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseTvIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport {\r\n  IGetLatestTvResult,\r\n  IGetOnAirTvResult,\r\n  IGetPopRatedTvResult,\r\n  IGetTopRatedTvResult,\r\n  latestTvshows,\r\n  onAirTvShows,\r\n  popTvshows,\r\n  topTvshows,\r\n} from \"../api\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 200vh;\r\n  background-color: black;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  aligh-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  background-color: red;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 36px;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 32px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  background-color: white;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-itmes: center;\r\n  margin-bottom: 230px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 90%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center ccenter;\r\n  height: 200px;\r\n  font-size: 23px;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigTv = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 15px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigVote = styled.div`\r\n  width: 400px;\r\n  height: 70px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  top: -100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst BtnPrev = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  left: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BtnNext = styled(motion.div)`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  right: 0;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: (nowBack: boolean) => ({\r\n    x: nowBack ? -window.outerWidth - 10 : window.outerWidth + 10,\r\n  }),\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (nowBack: boolean) => ({\r\n    x: nowBack ? window.outerWidth + 10 : -window.outerWidth - 10,\r\n  }),\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -50,\r\n    transition: {\r\n      delay: 0.2,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duration: 0.3,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 6;\r\n\r\nfunction Tv() {\r\n  const history = useHistory();\r\n  const { scrollY } = useViewportScroll();\r\n\r\n  // On Air Tv Shows\r\n  const { data: onData, isLoading: onLoading } = useQuery<IGetOnAirTvResult>(\r\n    [\"tvShows\", \"onPlaying\"],\r\n    onAirTvShows\r\n  );\r\n  const [onIndex, setOnIndex] = useState(0);\r\n  const [onLeaving, setOnLeaving] = useState(false);\r\n  const [onBack, setOnBack] = useState(false);\r\n  const toggleOnLeaving = () => setOnLeaving((prev) => !prev);\r\n  const increaseOnIndex = () => {\r\n    if (onData) {\r\n      if (onLeaving) return;\r\n      toggleOnLeaving();\r\n      const totalTvs = onData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setOnIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setOnBack(false);\r\n    }\r\n  };\r\n  const decreaseOnIndex = () => {\r\n    if (onData) {\r\n      if (onLeaving) return;\r\n      toggleOnLeaving();\r\n      const totalTvs = onData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setOnIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setOnBack(true);\r\n    }\r\n  };\r\n\r\n  // Top Rate Tv Shows\r\n  const { data: topData, isLoading: topLoading } =\r\n    useQuery<IGetTopRatedTvResult>([\"tvShows\", \"topPlaying\"], topTvshows);\r\n  const [topIndex, setTopIndex] = useState(0);\r\n  const [topLeaving, setTopLeaving] = useState(false);\r\n  const [topBack, setTopBack] = useState(false);\r\n  const toggleTopLeaving = () => setTopLeaving((prev) => !prev);\r\n  const increaseTopIndex = () => {\r\n    if (topData) {\r\n      if (topLeaving) return;\r\n      toggleTopLeaving();\r\n      const totalTvs = topData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setTopBack(false);\r\n    }\r\n  };\r\n  const decreaseTopIndex = () => {\r\n    if (topData) {\r\n      if (topLeaving) return;\r\n      toggleTopLeaving();\r\n      const totalTvs = topData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setTopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setTopBack(true);\r\n    }\r\n  };\r\n\r\n  // Popular Tv Shows\r\n  const { data: popData, isLoading: popLoading } =\r\n    useQuery<IGetPopRatedTvResult>([\"tvShows\", \"PopPlaying\"], popTvshows);\r\n  const [popIndex, setPopIndex] = useState(0);\r\n  const [popLeaving, setPopLeaving] = useState(false);\r\n  const [popBack, setPopBack] = useState(false);\r\n  const togglePopLeaving = () => setPopLeaving((prev) => !prev);\r\n  const increasePopIndex = () => {\r\n    if (popData) {\r\n      if (popLeaving) return;\r\n      togglePopLeaving();\r\n      const totalTvs = popData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setPopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      setPopBack(false);\r\n    }\r\n  };\r\n  const decreasePopIndex = () => {\r\n    if (popData) {\r\n      if (popLeaving) return;\r\n      togglePopLeaving();\r\n      const totalTvs = popData.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n      setPopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\r\n      setPopBack(true);\r\n    }\r\n  };\r\n\r\n  // Latest Tv shows\r\n  const { data: latestData, isLoading: latestLoading } =\r\n    useQuery<IGetLatestTvResult>([\"tvShows\", \"LatestPlaying\"], latestTvshows);\r\n\r\n  const onBoxClicked = (tvId: number) => {\r\n    history.push(`/tv/${tvId}`);\r\n  };\r\n  const onOverlayClick = () => history.push(\"/tv\");\r\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\r\n  const clickedOnTv =\r\n    bigTvMatch?.params.tvId &&\r\n    onData?.results.find((tv) => tv.id + \"\" === bigTvMatch?.params.tvId);\r\n  const clickedTopTv =\r\n    bigTvMatch?.params.tvId &&\r\n    topData?.results.find((tv) => tv.id + \"\" === bigTvMatch?.params.tvId);\r\n  const clickedPopTv =\r\n    bigTvMatch?.params.tvId &&\r\n    popData?.results.find((tv) => tv.id + \"\" === bigTvMatch?.params.tvId);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {onLoading && topLoading && popLoading && latestLoading ? (\r\n        <Loader>Loading</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner bgPhoto={makeImagePath(latestData?.poster_path || \"\")}>\r\n            <Title>{latestData?.name}</Title>\r\n            <Overview>{latestData?.overview}</Overview>\r\n            <BigVote>Current Air : {latestData?.last_air_date}</BigVote>\r\n          </Banner>\r\n          <SlideTitle>On Air Tv Shows</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseOnIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleOnLeaving}\r\n              custom={onBack}\r\n            >\r\n              <Row\r\n                custom={onBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={onIndex}\r\n              >\r\n                {onData?.results\r\n                  .slice(1)\r\n                  .slice(offset * onIndex, offset * onIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={tv.id + \"\"}\r\n                      key={tv.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseOnIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <SlideTitle>Top Rated Tv Shows</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreaseTopIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={toggleTopLeaving}\r\n              custom={topBack}\r\n            >\r\n              <Row\r\n                custom={topBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={topIndex}\r\n              >\r\n                {topData?.results\r\n                  .slice(1)\r\n                  .slice(offset * topIndex, offset * topIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={tv.id + \"\"}\r\n                      key={tv.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increaseTopIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <SlideTitle>Popular Tv Shows</SlideTitle>\r\n          <Slider>\r\n            <BtnPrev onClick={decreasePopIndex} whileHover={{ scale: 1.1 }}>\r\n              PREV\r\n            </BtnPrev>\r\n            <AnimatePresence\r\n              initial={false}\r\n              onExitComplete={togglePopLeaving}\r\n              custom={popBack}\r\n            >\r\n              <Row\r\n                custom={popBack}\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={popIndex}\r\n              >\r\n                {popData?.results\r\n                  .slice(1)\r\n                  .slice(offset * popIndex, offset * popIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={tv.id + \"\"}\r\n                      key={tv.id}\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      initial=\"normal\"\r\n                      whileHover=\"hover\"\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <BtnNext onClick={increasePopIndex} whileHover={{ scale: 1.1 }}>\r\n              NEXT\r\n            </BtnNext>\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigTvMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigTv\r\n                  style={{\r\n                    top: scrollY.get() + 100,\r\n                  }}\r\n                  layoutId={bigTvMatch.params.tvId}\r\n                >\r\n                  {clickedOnTv && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedOnTv.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedOnTv.name}</BigTitle>\r\n                      <BigOverview>{clickedOnTv.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                  {clickedTopTv && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedTopTv.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedTopTv.name}</BigTitle>\r\n                      <BigOverview>{clickedTopTv.overview}</BigOverview>\r\n                      <BigVote>\r\n                        Average : {clickedTopTv.vote_average} Score\r\n                      </BigVote>\r\n                      <BigVote>Count : {clickedTopTv.vote_count} Votes</BigVote>\r\n                    </>\r\n                  )}\r\n                  {clickedPopTv && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedPopTv.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedPopTv.name}</BigTitle>\r\n                      <BigOverview>{clickedPopTv.overview}</BigOverview>\r\n                      <BigVote>\r\n                        Average : {clickedPopTv.vote_average} Score\r\n                      </BigVote>\r\n                      <BigVote>Count : {clickedPopTv.vote_count} Votes</BigVote>\r\n                    </>\r\n                  )}\r\n                </BigTv>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Tv;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Routes/Home\";\r\nimport Search from \"./Routes/Search\";\r\nimport Tv from \"./Routes/Tv\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path={[\"/tv\", \"/tv/:tvId\"]}>\r\n          <Tv />\r\n        </Route>\r\n        <Route path={[\"/search\", \"/search?keyword=apple/:searchId\"]}>\r\n          <Search />\r\n        </Route>\r\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color: ${(props) => props.theme.white.darker};\r\n  background-color: black;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n`;\r\n\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={client}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <App />\r\n        </ThemeProvider>\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  red: \"#E51013\",\r\n  black: {\r\n    veryDark: \"#141414\",\r\n    darker: \"#181818\",\r\n    lighter: \"#2F2F2F\",\r\n  },\r\n  white: {\r\n    lighter: \"#fff\",\r\n    darker: \"#e5e5e5\",\r\n  },\r\n};\r\n"],"sourceRoot":""}